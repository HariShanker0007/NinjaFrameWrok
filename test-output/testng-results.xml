<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Report Configuration]]>
    </line>
    <line>
      <![CDATA[Establisihing DataBase connection]]>
    </line>
    <line>
      <![CDATA[Pre-Conditions]]>
    </line>
    <line>
      <![CDATA[Launched Browser]]>
    </line>
    <line>
      <![CDATA[Login Done]]>
    </line>
    <line>
      <![CDATA[Logout done]]>
    </line>
    <line>
      <![CDATA[Login Done]]>
    </line>
    <line>
      <![CDATA[Logout done]]>
    </line>
    <line>
      <![CDATA[Login Done]]>
    </line>
    <line>
      <![CDATA[Logout done]]>
    </line>
    <line>
      <![CDATA[closing browser]]>
    </line>
    <line>
      <![CDATA[Launched Browser]]>
    </line>
    <line>
      <![CDATA[Login Done]]>
    </line>
    <line>
      <![CDATA[Logout done]]>
    </line>
    <line>
      <![CDATA[closing browser]]>
    </line>
    <line>
      <![CDATA[Launched Browser]]>
    </line>
    <line>
      <![CDATA[Login Done]]>
    </line>
    <line>
      <![CDATA[Logout done]]>
    </line>
    <line>
      <![CDATA[closing browser]]>
    </line>
    <line>
      <![CDATA[Post Conditions]]>
    </line>
    <line>
      <![CDATA[Disconnect DB]]>
    </line>
  </reporter-output>
  <suite started-at="2025-10-27T14:13:51 IST" name="Suite" finished-at="2025-10-27T14:15:40 IST" duration-ms="109406">
    <groups>
      <group name="regression">
        <method signature="CreateCampaignTest.createCampaignWithExpectedCloseDate()[pri:1, instance:testNG.CreateCampaignTest@279fedbd]" name="createCampaignWithExpectedCloseDate" class="testNG.CreateCampaignTest"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="CreateCampaignTest.createCampaignWithMandatoryDetails()[pri:0, instance:testNG.CreateCampaignTest@279fedbd]" name="createCampaignWithMandatoryDetails" class="testNG.CreateCampaignTest"/>
        <method signature="CreateContactTest.createContactWithMandatoryDetails()[pri:0, instance:testNG.CreateContactTest@61322f9d]" name="createContactWithMandatoryDetails" class="testNG.CreateContactTest"/>
        <method signature="CreateProductTest.createProductWithMandatoryDetails()[pri:0, instance:testNG.CreateProductTest@65e98b1c]" name="createProductWithMandatoryDetails" class="testNG.CreateProductTest"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2025-10-27T14:13:51 IST" name="Test" finished-at="2025-10-27T14:15:40 IST" duration-ms="109406">
      <class name="testNG.CreateContactTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testNG.CreateContactTest@61322f9d]" started-at="2025-10-27T14:15:25 IST" name="beforeClass" finished-at="2025-10-27T14:15:26 IST" duration-ms="1413" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Launched Browser]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testNG.CreateContactTest@61322f9d]" started-at="2025-10-27T14:15:26 IST" name="beforeMethod" finished-at="2025-10-27T14:15:30 IST" duration-ms="3667" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Login Done]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="createContactWithMandatoryDetails()[pri:0, instance:testNG.CreateContactTest@61322f9d]" started-at="2025-10-27T14:15:30 IST" name="createContactWithMandatoryDetails" finished-at="2025-10-27T14:15:36 IST" duration-ms="6452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createContactWithMandatoryDetails -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testNG.CreateContactTest@61322f9d]" started-at="2025-10-27T14:15:36 IST" name="afterMethod" finished-at="2025-10-27T14:15:40 IST" duration-ms="3674" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Logout done]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="AfterClass()[pri:0, instance:testNG.CreateContactTest@61322f9d]" started-at="2025-10-27T14:15:40 IST" name="AfterClass" finished-at="2025-10-27T14:15:40 IST" duration-ms="331" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[closing browser]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- testNG.CreateContactTest -->
      <class name="testNG.CreateCampaignTest">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:testNG.CreateCampaignTest@279fedbd]" started-at="2025-10-27T14:13:51 IST" name="beforeSuite" finished-at="2025-10-27T14:13:51 IST" duration-ms="23" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Establisihing DataBase connection]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:testNG.CreateCampaignTest@279fedbd]" started-at="2025-10-27T14:13:51 IST" name="beforeTest" finished-at="2025-10-27T14:13:51 IST" duration-ms="2" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Pre-Conditions]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testNG.CreateCampaignTest@279fedbd]" started-at="2025-10-27T14:13:51 IST" name="beforeClass" finished-at="2025-10-27T14:13:54 IST" duration-ms="3498" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Launched Browser]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testNG.CreateCampaignTest@279fedbd]" started-at="2025-10-27T14:13:54 IST" name="beforeMethod" finished-at="2025-10-27T14:14:00 IST" duration-ms="5657" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Login Done]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="createCampaignWithAllFields()[pri:0, instance:testNG.CreateCampaignTest@279fedbd]" started-at="2025-10-27T14:14:00 IST" name="createCampaignWithAllFields" finished-at="2025-10-27T14:14:04 IST" duration-ms="3583" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCampaignWithAllFields -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testNG.CreateCampaignTest@279fedbd]" started-at="2025-10-27T14:14:04 IST" name="afterMethod" finished-at="2025-10-27T14:14:09 IST" duration-ms="5052" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Logout done]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testNG.CreateCampaignTest@279fedbd]" started-at="2025-10-27T14:14:09 IST" name="beforeMethod" finished-at="2025-10-27T14:14:13 IST" duration-ms="4198" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Login Done]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="createCampaignWithMandatoryDetails()[pri:0, instance:testNG.CreateCampaignTest@279fedbd]" started-at="2025-10-27T14:14:13 IST" name="createCampaignWithMandatoryDetails" finished-at="2025-10-27T14:14:16 IST" duration-ms="2680" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCampaignWithMandatoryDetails -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testNG.CreateCampaignTest@279fedbd]" started-at="2025-10-27T14:14:16 IST" name="afterMethod" finished-at="2025-10-27T14:14:34 IST" duration-ms="18528" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Logout done]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testNG.CreateCampaignTest@279fedbd]" started-at="2025-10-27T14:14:34 IST" name="beforeMethod" finished-at="2025-10-27T14:14:37 IST" duration-ms="2988" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Login Done]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="createCampaignWithExpectedCloseDate()[pri:1, instance:testNG.CreateCampaignTest@279fedbd]" started-at="2025-10-27T14:14:37 IST" name="createCampaignWithExpectedCloseDate" finished-at="2025-10-27T14:14:40 IST" duration-ms="2701" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCampaignWithExpectedCloseDate -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testNG.CreateCampaignTest@279fedbd]" started-at="2025-10-27T14:14:40 IST" name="afterMethod" finished-at="2025-10-27T14:14:44 IST" duration-ms="3731" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Logout done]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="AfterClass()[pri:0, instance:testNG.CreateCampaignTest@279fedbd]" started-at="2025-10-27T14:14:44 IST" name="AfterClass" finished-at="2025-10-27T14:14:44 IST" duration-ms="380" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[closing browser]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testNG.CreateCampaignTest@279fedbd]" started-at="2025-10-27T14:15:40 IST" name="afterTest" finished-at="2025-10-27T14:15:40 IST" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Post Conditions]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:testNG.CreateCampaignTest@279fedbd]" started-at="2025-10-27T14:15:40 IST" name="afterSuite" finished-at="2025-10-27T14:15:40 IST" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Disconnect DB]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testNG.CreateCampaignTest -->
      <class name="testNG.CreateProductTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testNG.CreateProductTest@65e98b1c]" started-at="2025-10-27T14:14:44 IST" name="beforeClass" finished-at="2025-10-27T14:14:46 IST" duration-ms="1701" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Launched Browser]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testNG.CreateProductTest@65e98b1c]" started-at="2025-10-27T14:14:46 IST" name="beforeMethod" finished-at="2025-10-27T14:14:50 IST" duration-ms="4354" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Login Done]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="createProductWithMandatoryDetails()[pri:0, instance:testNG.CreateProductTest@65e98b1c]" started-at="2025-10-27T14:14:50 IST" name="createProductWithMandatoryDetails" finished-at="2025-10-27T14:15:12 IST" duration-ms="21518" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div[@role='alert']"}
  (Session info: MicrosoftEdge=141.0.3537.99)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.27.0', revision: 'd6e718d134'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.8'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [072900e4a65d5a75a8a1805ef9e6d5dc, findElement {value=//div[@role='alert'], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 141.0.3537.99, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:61387}, msedge: {msedgedriverVersion: 141.0.3537.71 (e9128b790533..., userDataDir: C:\Users\LENOVO~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61387/devtoo..., se:cdpVersion: 141.0.3537.99, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 072900e4a65d5a75a8a1805ef9e6d5dc]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@role='alert']"}
  (Session info: MicrosoftEdge=141.0.3537.99)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.27.0', revision: 'd6e718d134'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.8'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [072900e4a65d5a75a8a1805ef9e6d5dc, findElement {value=//div[@role='alert'], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 141.0.3537.99, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:61387}, msedge: {msedgedriverVersion: 141.0.3537.71 (e9128b790533..., userDataDir: C:\Users\LENOVO~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61387/devtoo..., se:cdpVersion: 141.0.3537.99, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 072900e4a65d5a75a8a1805ef9e6d5dc
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at testNG.CreateProductTest.createProductWithMandatoryDetails(CreateProductTest.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProductWithMandatoryDetails -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testNG.CreateProductTest@65e98b1c]" started-at="2025-10-27T14:15:12 IST" name="afterMethod" finished-at="2025-10-27T14:15:24 IST" duration-ms="12538" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Logout done]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="AfterClass()[pri:0, instance:testNG.CreateProductTest@65e98b1c]" started-at="2025-10-27T14:15:24 IST" name="AfterClass" finished-at="2025-10-27T14:15:25 IST" duration-ms="359" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[closing browser]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- testNG.CreateProductTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
